services:
  postgres:
    image: postgres:15
    container_name: portfolio-postgres
    environment:
      POSTGRES_DB: outbox
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  outbox-api:
    build:
      context: .
      dockerfile: apps/outbox-api/Dockerfile
    container_name: portfolio-outbox-api
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: outbox
      DB_SSLMODE: disable
      PORT: 8080
      WEBHOOK_URL: http://portfolio:3000/api/webhook
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  observability-api:
    build:
      context: .
      dockerfile: packages/observability/Dockerfile
    container_name: portfolio-observability-api
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  feature-flags-api:
    build:
      context: .
      dockerfile: apps/feature-flags-api/Dockerfile
    container_name: portfolio-feature-flags-api
    ports:
      - "4000:4000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  portfolio:
    build:
      context: .
      dockerfile: ui/portfolio/Dockerfile
    container_name: portfolio-ui
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_OUTBOX_API_URL: http://outbox-api:8080
      NEXT_PUBLIC_FEATURE_FLAGS_API_URL: http://feature-flags-api:4000
      NEXT_PUBLIC_OBSERVABILITY_API_URL: http://observability-api:8081
    depends_on:
      outbox-api:
        condition: service_healthy
      feature-flags-api:
        condition: service_healthy
      observability-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
